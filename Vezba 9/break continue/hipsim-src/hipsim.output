Grammar

    0 $accept: program $end

    1 program: variable_list code_list

    2 variable_list: /* empty */
    3              | variable_list variable

    4 @1: /* empty */

    5 variable: _LABEL_DEF @1 _WORD _NUMBER

    6 code_list: code_line
    7          | code_list code_line

    8 code_line: label_def
    9          | asm_line

   10 label_def: _LABEL_DEF

   11 asm_line: arithmetic
   12         | flowcontrol
   13         | stack
   14         | _HALT

   15 arithmetic: _ADD input _COMMA input _COMMA output
   16           | _SUB input _COMMA input _COMMA output
   17           | _MUL input _COMMA input _COMMA output
   18           | _DIV input _COMMA input _COMMA output
   19           | _MOV input _COMMA output

   20 flowcontrol: _CMP input _COMMA input
   21            | _JMP label
   22            | _JEQ label
   23            | _JNE label
   24            | _JGT label
   25            | _JLT label
   26            | _JGE label
   27            | _JLE label

   28 stack: _PUSH input
   29      | _POP output
   30      | _CALL label
   31      | _RET

   32 label: _LABEL

   33 output: _REGISTER
   34       | _NUMBER _LPAREN _REGISTER _RPAREN
   35       | _LPAREN _REGISTER _RPAREN
   36       | label

   37 input: _CONSTANT
   38      | _ADDRESS
   39      | output


Terminals, with rules where they appear

$end (0) 0
error (256)
_WORD (258) 5
_PUSH (259) 28
_POP (260) 29
_CALL (261) 30
_RET (262) 31
_CMP (263) 20
_JMP (264) 21
_JEQ (265) 22
_JNE (266) 23
_JGT (267) 24
_JLT (268) 25
_JGE (269) 26
_JLE (270) 27
_ADD (271) 15
_SUB (272) 16
_MUL (273) 17
_DIV (274) 18
_MOV (275) 19
_HALT (276) 14
_REGISTER (277) 33 34 35
_CONSTANT (278) 37
_NUMBER (279) 5 34
_LABEL_DEF (280) 5 10
_LABEL (281) 32
_ADDRESS (282) 38
_COMMA (283) 15 16 17 18 19 20
_LPAREN (284) 34 35
_RPAREN (285) 34 35


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1, on right: 0
variable_list (33)
    on left: 2 3, on right: 1 3
variable (34)
    on left: 5, on right: 3
@1 (35)
    on left: 4, on right: 5
code_list (36)
    on left: 6 7, on right: 1 7
code_line (37)
    on left: 8 9, on right: 6 7
label_def (38)
    on left: 10, on right: 8
asm_line (39)
    on left: 11 12 13 14, on right: 9
arithmetic (40)
    on left: 15 16 17 18 19, on right: 11
flowcontrol (41)
    on left: 20 21 22 23 24 25 26 27, on right: 12
stack (42)
    on left: 28 29 30 31, on right: 13
label (43)
    on left: 32, on right: 21 22 23 24 25 26 27 30 36
output (44)
    on left: 33 34 35 36, on right: 15 16 17 18 19 29 39
input (45)
    on left: 37 38 39, on right: 15 16 17 18 19 20 28


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (variable_list)

    program        go to state 1
    variable_list  go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    1 program: variable_list . code_list
    3 variable_list: variable_list . variable

    _PUSH       shift, and go to state 4
    _POP        shift, and go to state 5
    _CALL       shift, and go to state 6
    _RET        shift, and go to state 7
    _CMP        shift, and go to state 8
    _JMP        shift, and go to state 9
    _JEQ        shift, and go to state 10
    _JNE        shift, and go to state 11
    _JGT        shift, and go to state 12
    _JLT        shift, and go to state 13
    _JGE        shift, and go to state 14
    _JLE        shift, and go to state 15
    _ADD        shift, and go to state 16
    _SUB        shift, and go to state 17
    _MUL        shift, and go to state 18
    _DIV        shift, and go to state 19
    _MOV        shift, and go to state 20
    _HALT       shift, and go to state 21
    _LABEL_DEF  shift, and go to state 22

    variable     go to state 23
    code_list    go to state 24
    code_line    go to state 25
    label_def    go to state 26
    asm_line     go to state 27
    arithmetic   go to state 28
    flowcontrol  go to state 29
    stack        go to state 30


state 3

    0 $accept: program $end .

    $default  accept


state 4

   28 stack: _PUSH . input

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 39


state 5

   29 stack: _POP . output

    _REGISTER  shift, and go to state 31
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 40


state 6

   30 stack: _CALL . label

    _LABEL  shift, and go to state 34

    label  go to state 41


state 7

   31 stack: _RET .

    $default  reduce using rule 31 (stack)


state 8

   20 flowcontrol: _CMP . input _COMMA input

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 42


state 9

   21 flowcontrol: _JMP . label

    _LABEL  shift, and go to state 34

    label  go to state 43


state 10

   22 flowcontrol: _JEQ . label

    _LABEL  shift, and go to state 34

    label  go to state 44


state 11

   23 flowcontrol: _JNE . label

    _LABEL  shift, and go to state 34

    label  go to state 45


state 12

   24 flowcontrol: _JGT . label

    _LABEL  shift, and go to state 34

    label  go to state 46


state 13

   25 flowcontrol: _JLT . label

    _LABEL  shift, and go to state 34

    label  go to state 47


state 14

   26 flowcontrol: _JGE . label

    _LABEL  shift, and go to state 34

    label  go to state 48


state 15

   27 flowcontrol: _JLE . label

    _LABEL  shift, and go to state 34

    label  go to state 49


state 16

   15 arithmetic: _ADD . input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 50


state 17

   16 arithmetic: _SUB . input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 51


state 18

   17 arithmetic: _MUL . input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 52


state 19

   18 arithmetic: _DIV . input _COMMA input _COMMA output

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 53


state 20

   19 arithmetic: _MOV . input _COMMA output

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 54


state 21

   14 asm_line: _HALT .

    $default  reduce using rule 14 (asm_line)


state 22

    5 variable: _LABEL_DEF . @1 _WORD _NUMBER
   10 label_def: _LABEL_DEF .

    _WORD     reduce using rule 4 (@1)
    $default  reduce using rule 10 (label_def)

    @1  go to state 55


state 23

    3 variable_list: variable_list variable .

    $default  reduce using rule 3 (variable_list)


state 24

    1 program: variable_list code_list .
    7 code_list: code_list . code_line

    _PUSH       shift, and go to state 4
    _POP        shift, and go to state 5
    _CALL       shift, and go to state 6
    _RET        shift, and go to state 7
    _CMP        shift, and go to state 8
    _JMP        shift, and go to state 9
    _JEQ        shift, and go to state 10
    _JNE        shift, and go to state 11
    _JGT        shift, and go to state 12
    _JLT        shift, and go to state 13
    _JGE        shift, and go to state 14
    _JLE        shift, and go to state 15
    _ADD        shift, and go to state 16
    _SUB        shift, and go to state 17
    _MUL        shift, and go to state 18
    _DIV        shift, and go to state 19
    _MOV        shift, and go to state 20
    _HALT       shift, and go to state 21
    _LABEL_DEF  shift, and go to state 56

    $default  reduce using rule 1 (program)

    code_line    go to state 57
    label_def    go to state 26
    asm_line     go to state 27
    arithmetic   go to state 28
    flowcontrol  go to state 29
    stack        go to state 30


state 25

    6 code_list: code_line .

    $default  reduce using rule 6 (code_list)


state 26

    8 code_line: label_def .

    $default  reduce using rule 8 (code_line)


state 27

    9 code_line: asm_line .

    $default  reduce using rule 9 (code_line)


state 28

   11 asm_line: arithmetic .

    $default  reduce using rule 11 (asm_line)


state 29

   12 asm_line: flowcontrol .

    $default  reduce using rule 12 (asm_line)


state 30

   13 asm_line: stack .

    $default  reduce using rule 13 (asm_line)


state 31

   33 output: _REGISTER .

    $default  reduce using rule 33 (output)


state 32

   37 input: _CONSTANT .

    $default  reduce using rule 37 (input)


state 33

   34 output: _NUMBER . _LPAREN _REGISTER _RPAREN

    _LPAREN  shift, and go to state 58


state 34

   32 label: _LABEL .

    $default  reduce using rule 32 (label)


state 35

   38 input: _ADDRESS .

    $default  reduce using rule 38 (input)


state 36

   35 output: _LPAREN . _REGISTER _RPAREN

    _REGISTER  shift, and go to state 59


state 37

   36 output: label .

    $default  reduce using rule 36 (output)


state 38

   39 input: output .

    $default  reduce using rule 39 (input)


state 39

   28 stack: _PUSH input .

    $default  reduce using rule 28 (stack)


state 40

   29 stack: _POP output .

    $default  reduce using rule 29 (stack)


state 41

   30 stack: _CALL label .

    $default  reduce using rule 30 (stack)


state 42

   20 flowcontrol: _CMP input . _COMMA input

    _COMMA  shift, and go to state 60


state 43

   21 flowcontrol: _JMP label .

    $default  reduce using rule 21 (flowcontrol)


state 44

   22 flowcontrol: _JEQ label .

    $default  reduce using rule 22 (flowcontrol)


state 45

   23 flowcontrol: _JNE label .

    $default  reduce using rule 23 (flowcontrol)


state 46

   24 flowcontrol: _JGT label .

    $default  reduce using rule 24 (flowcontrol)


state 47

   25 flowcontrol: _JLT label .

    $default  reduce using rule 25 (flowcontrol)


state 48

   26 flowcontrol: _JGE label .

    $default  reduce using rule 26 (flowcontrol)


state 49

   27 flowcontrol: _JLE label .

    $default  reduce using rule 27 (flowcontrol)


state 50

   15 arithmetic: _ADD input . _COMMA input _COMMA output

    _COMMA  shift, and go to state 61


state 51

   16 arithmetic: _SUB input . _COMMA input _COMMA output

    _COMMA  shift, and go to state 62


state 52

   17 arithmetic: _MUL input . _COMMA input _COMMA output

    _COMMA  shift, and go to state 63


state 53

   18 arithmetic: _DIV input . _COMMA input _COMMA output

    _COMMA  shift, and go to state 64


state 54

   19 arithmetic: _MOV input . _COMMA output

    _COMMA  shift, and go to state 65


state 55

    5 variable: _LABEL_DEF @1 . _WORD _NUMBER

    _WORD  shift, and go to state 66


state 56

   10 label_def: _LABEL_DEF .

    $default  reduce using rule 10 (label_def)


state 57

    7 code_list: code_list code_line .

    $default  reduce using rule 7 (code_list)


state 58

   34 output: _NUMBER _LPAREN . _REGISTER _RPAREN

    _REGISTER  shift, and go to state 67


state 59

   35 output: _LPAREN _REGISTER . _RPAREN

    _RPAREN  shift, and go to state 68


state 60

   20 flowcontrol: _CMP input _COMMA . input

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 69


state 61

   15 arithmetic: _ADD input _COMMA . input _COMMA output

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 70


state 62

   16 arithmetic: _SUB input _COMMA . input _COMMA output

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 71


state 63

   17 arithmetic: _MUL input _COMMA . input _COMMA output

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 72


state 64

   18 arithmetic: _DIV input _COMMA . input _COMMA output

    _REGISTER  shift, and go to state 31
    _CONSTANT  shift, and go to state 32
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _ADDRESS   shift, and go to state 35
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 38
    input   go to state 73


state 65

   19 arithmetic: _MOV input _COMMA . output

    _REGISTER  shift, and go to state 31
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 74


state 66

    5 variable: _LABEL_DEF @1 _WORD . _NUMBER

    _NUMBER  shift, and go to state 75


state 67

   34 output: _NUMBER _LPAREN _REGISTER . _RPAREN

    _RPAREN  shift, and go to state 76


state 68

   35 output: _LPAREN _REGISTER _RPAREN .

    $default  reduce using rule 35 (output)


state 69

   20 flowcontrol: _CMP input _COMMA input .

    $default  reduce using rule 20 (flowcontrol)


state 70

   15 arithmetic: _ADD input _COMMA input . _COMMA output

    _COMMA  shift, and go to state 77


state 71

   16 arithmetic: _SUB input _COMMA input . _COMMA output

    _COMMA  shift, and go to state 78


state 72

   17 arithmetic: _MUL input _COMMA input . _COMMA output

    _COMMA  shift, and go to state 79


state 73

   18 arithmetic: _DIV input _COMMA input . _COMMA output

    _COMMA  shift, and go to state 80


state 74

   19 arithmetic: _MOV input _COMMA output .

    $default  reduce using rule 19 (arithmetic)


state 75

    5 variable: _LABEL_DEF @1 _WORD _NUMBER .

    $default  reduce using rule 5 (variable)


state 76

   34 output: _NUMBER _LPAREN _REGISTER _RPAREN .

    $default  reduce using rule 34 (output)


state 77

   15 arithmetic: _ADD input _COMMA input _COMMA . output

    _REGISTER  shift, and go to state 31
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 81


state 78

   16 arithmetic: _SUB input _COMMA input _COMMA . output

    _REGISTER  shift, and go to state 31
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 82


state 79

   17 arithmetic: _MUL input _COMMA input _COMMA . output

    _REGISTER  shift, and go to state 31
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 83


state 80

   18 arithmetic: _DIV input _COMMA input _COMMA . output

    _REGISTER  shift, and go to state 31
    _NUMBER    shift, and go to state 33
    _LABEL     shift, and go to state 34
    _LPAREN    shift, and go to state 36

    label   go to state 37
    output  go to state 84


state 81

   15 arithmetic: _ADD input _COMMA input _COMMA output .

    $default  reduce using rule 15 (arithmetic)


state 82

   16 arithmetic: _SUB input _COMMA input _COMMA output .

    $default  reduce using rule 16 (arithmetic)


state 83

   17 arithmetic: _MUL input _COMMA input _COMMA output .

    $default  reduce using rule 17 (arithmetic)


state 84

   18 arithmetic: _DIV input _COMMA input _COMMA output .

    $default  reduce using rule 18 (arithmetic)
