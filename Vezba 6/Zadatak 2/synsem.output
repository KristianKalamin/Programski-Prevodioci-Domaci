Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 $@2: %empty

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body

    7 type: _TYPE

    8 parameter: %empty
    9          | type _ID

   10 body: _LBRACKET variable_list statement_list _RBRACKET

   11 variable_list: %empty
   12              | variable_list variable

   13 variable: type _ID _SEMICOLON

   14 statement_list: %empty
   15               | statement_list statement

   16 statement: compound_statement
   17          | assignment_statement
   18          | if_statement
   19          | return_statement

   20 compound_statement: _LBRACKET statement_list _RBRACKET

   21 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   22 num_exp: exp
   23        | num_exp _AROP exp

   24 exp: literal
   25    | _ID
   26    | function_call
   27    | _LPAREN num_exp _RPAREN

   28 literal: _INT_NUMBER
   29        | _UINT_NUMBER

   30 $@3: %empty

   31 function_call: _ID $@3 _LPAREN argument _RPAREN

   32 argument: %empty
   33         | num_exp

   34 if_statement: if_part
   35             | if_part _ELSE statement

   36 if_part: _IF _LPAREN rel_exp _RPAREN statement

   37 rel_exp: num_exp _RELOP num_exp

   38 return_statement: _RETURN var _SEMICOLON

   39 var: %empty
   40    | num_exp


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 7
_IF (259) 36
_ELSE (260) 35
_RETURN (261) 38
_ID (262) 6 9 13 21 25 31
_INT_NUMBER (263) 28
_UINT_NUMBER (264) 29
_LPAREN (265) 6 27 31 36
_RPAREN (266) 6 27 31 36
_LBRACKET (267) 10 20
_RBRACKET (268) 10 20
_ASSIGN (269) 21
_SEMICOLON (270) 13 21 38
_AROP (271) 23
_RELOP (272) 37
ONLY_IF (273)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1, on right: 0
function_list (21)
    on left: 2 3, on right: 1 3
function (22)
    on left: 6, on right: 2 3
$@1 (23)
    on left: 4, on right: 6
$@2 (24)
    on left: 5, on right: 6
type (25)
    on left: 7, on right: 6 9 13
parameter (26)
    on left: 8 9, on right: 6
body (27)
    on left: 10, on right: 6
variable_list (28)
    on left: 11 12, on right: 10 12
variable (29)
    on left: 13, on right: 12
statement_list (30)
    on left: 14 15, on right: 10 15 20
statement (31)
    on left: 16 17 18 19, on right: 15 35 36
compound_statement (32)
    on left: 20, on right: 16
assignment_statement (33)
    on left: 21, on right: 17
num_exp (34)
    on left: 22 23, on right: 21 23 27 33 37 40
exp (35)
    on left: 24 25 26 27, on right: 22 23
literal (36)
    on left: 28 29, on right: 24
function_call (37)
    on left: 31, on right: 26
$@3 (38)
    on left: 30, on right: 31
argument (39)
    on left: 32 33, on right: 31
if_statement (40)
    on left: 34 35, on right: 18
if_part (41)
    on left: 36, on right: 34 35
rel_exp (42)
    on left: 37, on right: 36
return_statement (43)
    on left: 38, on right: 19
var (44)
    on left: 39 40, on right: 38


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    7 type: _TYPE .

    $default  reduce using rule 7 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    6 function: type . _ID $@1 _LPAREN parameter _RPAREN $@2 body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    6 function: type _ID . $@1 _LPAREN parameter _RPAREN $@2 body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 9


State 9

    6 function: type _ID $@1 . _LPAREN parameter _RPAREN $@2 body

    _LPAREN  shift, and go to state 10


State 10

    6 function: type _ID $@1 _LPAREN . parameter _RPAREN $@2 body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 8 (parameter)

    type       go to state 11
    parameter  go to state 12


State 11

    9 parameter: type . _ID

    _ID  shift, and go to state 13


State 12

    6 function: type _ID $@1 _LPAREN parameter . _RPAREN $@2 body

    _RPAREN  shift, and go to state 14


State 13

    9 parameter: type _ID .

    $default  reduce using rule 9 (parameter)


State 14

    6 function: type _ID $@1 _LPAREN parameter _RPAREN . $@2 body

    $default  reduce using rule 5 ($@2)

    $@2  go to state 15


State 15

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 16

   10 body: _LBRACKET . variable_list statement_list _RBRACKET

    $default  reduce using rule 11 (variable_list)

    variable_list  go to state 18


State 17

    6 function: type _ID $@1 _LPAREN parameter _RPAREN $@2 body .

    $default  reduce using rule 6 (function)


State 18

   10 body: _LBRACKET variable_list . statement_list _RBRACKET
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    $default  reduce using rule 14 (statement_list)

    type            go to state 19
    variable        go to state 20
    statement_list  go to state 21


State 19

   13 variable: type . _ID _SEMICOLON

    _ID  shift, and go to state 22


State 20

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 21

   10 body: _LBRACKET variable_list statement_list . _RBRACKET
   15 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 27

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 22

   13 variable: type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 34


State 23

   36 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 35


State 24

   38 return_statement: _RETURN . var _SEMICOLON

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    $default  reduce using rule 39 (var)

    num_exp        go to state 40
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    var            go to state 44


State 25

   21 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 45


State 26

   20 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 46


State 27

   10 body: _LBRACKET variable_list statement_list _RBRACKET .

    $default  reduce using rule 10 (body)


State 28

   15 statement_list: statement_list statement .

    $default  reduce using rule 15 (statement_list)


State 29

   16 statement: compound_statement .

    $default  reduce using rule 16 (statement)


State 30

   17 statement: assignment_statement .

    $default  reduce using rule 17 (statement)


State 31

   18 statement: if_statement .

    $default  reduce using rule 18 (statement)


State 32

   34 if_statement: if_part .
   35             | if_part . _ELSE statement

    _ELSE  shift, and go to state 47

    $default  reduce using rule 34 (if_statement)


State 33

   19 statement: return_statement .

    $default  reduce using rule 19 (statement)


State 34

   13 variable: type _ID _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 35

   36 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 48
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    rel_exp        go to state 49


State 36

   25 exp: _ID .
   31 function_call: _ID . $@3 _LPAREN argument _RPAREN

    _LPAREN   reduce using rule 30 ($@3)
    $default  reduce using rule 25 (exp)

    $@3  go to state 50


State 37

   28 literal: _INT_NUMBER .

    $default  reduce using rule 28 (literal)


State 38

   29 literal: _UINT_NUMBER .

    $default  reduce using rule 29 (literal)


State 39

   27 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 51
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43


State 40

   23 num_exp: num_exp . _AROP exp
   40 var: num_exp .

    _AROP  shift, and go to state 52

    $default  reduce using rule 40 (var)


State 41

   22 num_exp: exp .

    $default  reduce using rule 22 (num_exp)


State 42

   24 exp: literal .

    $default  reduce using rule 24 (exp)


State 43

   26 exp: function_call .

    $default  reduce using rule 26 (exp)


State 44

   38 return_statement: _RETURN var . _SEMICOLON

    _SEMICOLON  shift, and go to state 53


State 45

   21 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 54
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43


State 46

   15 statement_list: statement_list . statement
   20 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 55

    statement             go to state 28
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 47

   35 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 56
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 48

   23 num_exp: num_exp . _AROP exp
   37 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 52
    _RELOP  shift, and go to state 57


State 49

   36 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 58


State 50

   31 function_call: _ID $@3 . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 59


State 51

   23 num_exp: num_exp . _AROP exp
   27 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 60
    _AROP    shift, and go to state 52


State 52

   23 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    exp            go to state 61
    literal        go to state 42
    function_call  go to state 43


State 53

   38 return_statement: _RETURN var _SEMICOLON .

    $default  reduce using rule 38 (return_statement)


State 54

   21 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   23 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 62
    _AROP       shift, and go to state 52


State 55

   20 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 20 (compound_statement)


State 56

   35 if_statement: if_part _ELSE statement .

    $default  reduce using rule 35 (if_statement)


State 57

   37 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    num_exp        go to state 63
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43


State 58

   36 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 64
    compound_statement    go to state 29
    assignment_statement  go to state 30
    if_statement          go to state 31
    if_part               go to state 32
    return_statement      go to state 33


State 59

   31 function_call: _ID $@3 _LPAREN . argument _RPAREN

    _ID           shift, and go to state 36
    _INT_NUMBER   shift, and go to state 37
    _UINT_NUMBER  shift, and go to state 38
    _LPAREN       shift, and go to state 39

    $default  reduce using rule 32 (argument)

    num_exp        go to state 65
    exp            go to state 41
    literal        go to state 42
    function_call  go to state 43
    argument       go to state 66


State 60

   27 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 27 (exp)


State 61

   23 num_exp: num_exp _AROP exp .

    $default  reduce using rule 23 (num_exp)


State 62

   21 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 21 (assignment_statement)


State 63

   23 num_exp: num_exp . _AROP exp
   37 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 52

    $default  reduce using rule 37 (rel_exp)


State 64

   36 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 36 (if_part)


State 65

   23 num_exp: num_exp . _AROP exp
   33 argument: num_exp .

    _AROP  shift, and go to state 52

    $default  reduce using rule 33 (argument)


State 66

   31 function_call: _ID $@3 _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 67


State 67

   31 function_call: _ID $@3 _LPAREN argument _RPAREN .

    $default  reduce using rule 31 (function_call)
