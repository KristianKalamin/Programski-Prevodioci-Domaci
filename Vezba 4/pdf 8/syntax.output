State 16 conflicts: 1 shift/reduce
State 18 conflicts: 4 shift/reduce
State 23 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 function: type _ID _LPAREN parameter _RPAREN body

    5 type: _TYPE

    6 parameter: %empty
    7          | type _ID

    8 body: _LBRACKET e _RBRACKET

    9 e: %empty
   10  | e statement_list variable_list

   11 variable_list: %empty
   12              | variable_list variable

   13 variable: type _ID _SEMICOLON

   14 statement_list: %empty
   15               | statement_list statement

   16 statement: compound_statement
   17          | assignment_statement
   18          | if_statement
   19          | return_statement

   20 compound_statement: _LBRACKET statement_list _RBRACKET

   21 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   22 num_exp: exp
   23        | num_exp _AROP exp

   24 exp: literal
   25    | _ID
   26    | function_call
   27    | _LPAREN num_exp _RPAREN

   28 literal: _INT_NUMBER
   29        | _UINT_NUMBER

   30 function_call: _ID _LPAREN argument _RPAREN

   31 argument: %empty
   32         | num_exp

   33 if_statement: if_part
   34             | if_part _ELSE statement

   35 if_part: _IF _LPAREN rel_exp _RPAREN statement

   36 rel_exp: num_exp _RELOP num_exp

   37 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5
_IF (259) 35
_ELSE (260) 34
_RETURN (261) 37
_ID (262) 4 7 13 21 25 30
_INT_NUMBER (263) 28
_UINT_NUMBER (264) 29
_LPAREN (265) 4 27 30 35
_RPAREN (266) 4 27 30 35
_LBRACKET (267) 8 20
_RBRACKET (268) 8 20
_ASSIGN (269) 21
_SEMICOLON (270) 13 21 37
_AROP (271) 23
_RELOP (272) 36
ONLY_IF (273)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1, on right: 0
function_list (21)
    on left: 2 3, on right: 1 3
function (22)
    on left: 4, on right: 2 3
type (23)
    on left: 5, on right: 4 7 13
parameter (24)
    on left: 6 7, on right: 4
body (25)
    on left: 8, on right: 4
e (26)
    on left: 9 10, on right: 8 10
variable_list (27)
    on left: 11 12, on right: 10 12
variable (28)
    on left: 13, on right: 12
statement_list (29)
    on left: 14 15, on right: 10 15 20
statement (30)
    on left: 16 17 18 19, on right: 15 34 35
compound_statement (31)
    on left: 20, on right: 16
assignment_statement (32)
    on left: 21, on right: 17
num_exp (33)
    on left: 22 23, on right: 21 23 27 32 36 37
exp (34)
    on left: 24 25 26 27, on right: 22 23
literal (35)
    on left: 28 29, on right: 24
function_call (36)
    on left: 30, on right: 26
argument (37)
    on left: 31 32, on right: 30
if_statement (38)
    on left: 33 34, on right: 18
if_part (39)
    on left: 35, on right: 33 34
rel_exp (40)
    on left: 36, on right: 35
return_statement (41)
    on left: 37, on right: 19


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    5 type: _TYPE .

    $default  reduce using rule 5 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    4 function: type . _ID _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    4 function: type _ID . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    4 function: type _ID _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 6 (parameter)

    type       go to state 10
    parameter  go to state 11


State 10

    7 parameter: type . _ID

    _ID  shift, and go to state 12


State 11

    4 function: type _ID _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: type _ID .

    $default  reduce using rule 7 (parameter)


State 13

    4 function: type _ID _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . e _RBRACKET

    $default  reduce using rule 9 (e)

    e  go to state 16


State 15

    4 function: type _ID _LPAREN parameter _RPAREN body .

    $default  reduce using rule 4 (function)


State 16

    8 body: _LBRACKET e . _RBRACKET
   10 e: e . statement_list variable_list

    _RBRACKET  shift, and go to state 17

    _RBRACKET  [reduce using rule 14 (statement_list)]
    $default   reduce using rule 14 (statement_list)

    statement_list  go to state 18


State 17

    8 body: _LBRACKET e _RBRACKET .

    $default  reduce using rule 8 (body)


State 18

   10 e: e statement_list . variable_list
   15 statement_list: statement_list . statement

    _IF        shift, and go to state 19
    _RETURN    shift, and go to state 20
    _ID        shift, and go to state 21
    _LBRACKET  shift, and go to state 22

    _IF        [reduce using rule 11 (variable_list)]
    _RETURN    [reduce using rule 11 (variable_list)]
    _ID        [reduce using rule 11 (variable_list)]
    _LBRACKET  [reduce using rule 11 (variable_list)]
    $default   reduce using rule 11 (variable_list)

    variable_list         go to state 23
    statement             go to state 24
    compound_statement    go to state 25
    assignment_statement  go to state 26
    if_statement          go to state 27
    if_part               go to state 28
    return_statement      go to state 29


State 19

   35 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 30


State 20

   37 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 31
    _INT_NUMBER   shift, and go to state 32
    _UINT_NUMBER  shift, and go to state 33
    _LPAREN       shift, and go to state 34

    num_exp        go to state 35
    exp            go to state 36
    literal        go to state 37
    function_call  go to state 38


State 21

   21 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 39


State 22

   20 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 14 (statement_list)

    statement_list  go to state 40


State 23

   10 e: e statement_list variable_list .
   12 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    _TYPE     [reduce using rule 10 (e)]
    $default  reduce using rule 10 (e)

    type      go to state 41
    variable  go to state 42


State 24

   15 statement_list: statement_list statement .

    $default  reduce using rule 15 (statement_list)


State 25

   16 statement: compound_statement .

    $default  reduce using rule 16 (statement)


State 26

   17 statement: assignment_statement .

    $default  reduce using rule 17 (statement)


State 27

   18 statement: if_statement .

    $default  reduce using rule 18 (statement)


State 28

   33 if_statement: if_part .
   34             | if_part . _ELSE statement

    _ELSE  shift, and go to state 43

    $default  reduce using rule 33 (if_statement)


State 29

   19 statement: return_statement .

    $default  reduce using rule 19 (statement)


State 30

   35 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 31
    _INT_NUMBER   shift, and go to state 32
    _UINT_NUMBER  shift, and go to state 33
    _LPAREN       shift, and go to state 34

    num_exp        go to state 44
    exp            go to state 36
    literal        go to state 37
    function_call  go to state 38
    rel_exp        go to state 45


State 31

   25 exp: _ID .
   30 function_call: _ID . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 46

    $default  reduce using rule 25 (exp)


State 32

   28 literal: _INT_NUMBER .

    $default  reduce using rule 28 (literal)


State 33

   29 literal: _UINT_NUMBER .

    $default  reduce using rule 29 (literal)


State 34

   27 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 31
    _INT_NUMBER   shift, and go to state 32
    _UINT_NUMBER  shift, and go to state 33
    _LPAREN       shift, and go to state 34

    num_exp        go to state 47
    exp            go to state 36
    literal        go to state 37
    function_call  go to state 38


State 35

   23 num_exp: num_exp . _AROP exp
   37 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 48
    _AROP       shift, and go to state 49


State 36

   22 num_exp: exp .

    $default  reduce using rule 22 (num_exp)


State 37

   24 exp: literal .

    $default  reduce using rule 24 (exp)


State 38

   26 exp: function_call .

    $default  reduce using rule 26 (exp)


State 39

   21 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 31
    _INT_NUMBER   shift, and go to state 32
    _UINT_NUMBER  shift, and go to state 33
    _LPAREN       shift, and go to state 34

    num_exp        go to state 50
    exp            go to state 36
    literal        go to state 37
    function_call  go to state 38


State 40

   15 statement_list: statement_list . statement
   20 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 19
    _RETURN    shift, and go to state 20
    _ID        shift, and go to state 21
    _LBRACKET  shift, and go to state 22
    _RBRACKET  shift, and go to state 51

    statement             go to state 24
    compound_statement    go to state 25
    assignment_statement  go to state 26
    if_statement          go to state 27
    if_part               go to state 28
    return_statement      go to state 29


State 41

   13 variable: type . _ID _SEMICOLON

    _ID  shift, and go to state 52


State 42

   12 variable_list: variable_list variable .

    $default  reduce using rule 12 (variable_list)


State 43

   34 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 19
    _RETURN    shift, and go to state 20
    _ID        shift, and go to state 21
    _LBRACKET  shift, and go to state 22

    statement             go to state 53
    compound_statement    go to state 25
    assignment_statement  go to state 26
    if_statement          go to state 27
    if_part               go to state 28
    return_statement      go to state 29


State 44

   23 num_exp: num_exp . _AROP exp
   36 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 49
    _RELOP  shift, and go to state 54


State 45

   35 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 55


State 46

   30 function_call: _ID _LPAREN . argument _RPAREN

    _ID           shift, and go to state 31
    _INT_NUMBER   shift, and go to state 32
    _UINT_NUMBER  shift, and go to state 33
    _LPAREN       shift, and go to state 34

    $default  reduce using rule 31 (argument)

    num_exp        go to state 56
    exp            go to state 36
    literal        go to state 37
    function_call  go to state 38
    argument       go to state 57


State 47

   23 num_exp: num_exp . _AROP exp
   27 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 58
    _AROP    shift, and go to state 49


State 48

   37 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 37 (return_statement)


State 49

   23 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 31
    _INT_NUMBER   shift, and go to state 32
    _UINT_NUMBER  shift, and go to state 33
    _LPAREN       shift, and go to state 34

    exp            go to state 59
    literal        go to state 37
    function_call  go to state 38


State 50

   21 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   23 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 60
    _AROP       shift, and go to state 49


State 51

   20 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 20 (compound_statement)


State 52

   13 variable: type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 61


State 53

   34 if_statement: if_part _ELSE statement .

    $default  reduce using rule 34 (if_statement)


State 54

   36 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 31
    _INT_NUMBER   shift, and go to state 32
    _UINT_NUMBER  shift, and go to state 33
    _LPAREN       shift, and go to state 34

    num_exp        go to state 62
    exp            go to state 36
    literal        go to state 37
    function_call  go to state 38


State 55

   35 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 19
    _RETURN    shift, and go to state 20
    _ID        shift, and go to state 21
    _LBRACKET  shift, and go to state 22

    statement             go to state 63
    compound_statement    go to state 25
    assignment_statement  go to state 26
    if_statement          go to state 27
    if_part               go to state 28
    return_statement      go to state 29


State 56

   23 num_exp: num_exp . _AROP exp
   32 argument: num_exp .

    _AROP  shift, and go to state 49

    $default  reduce using rule 32 (argument)


State 57

   30 function_call: _ID _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 64


State 58

   27 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 27 (exp)


State 59

   23 num_exp: num_exp _AROP exp .

    $default  reduce using rule 23 (num_exp)


State 60

   21 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 21 (assignment_statement)


State 61

   13 variable: type _ID _SEMICOLON .

    $default  reduce using rule 13 (variable)


State 62

   23 num_exp: num_exp . _AROP exp
   36 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 49

    $default  reduce using rule 36 (rel_exp)


State 63

   35 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 35 (if_part)


State 64

   30 function_call: _ID _LPAREN argument _RPAREN .

    $default  reduce using rule 30 (function_call)
