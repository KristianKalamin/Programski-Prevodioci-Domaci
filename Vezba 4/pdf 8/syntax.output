State 14 conflicts: 5 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 function: type _ID _LPAREN parameter _RPAREN body

    5 type: _TYPE

    6 parameter: %empty
    7          | type _ID

    8 body: _LBRACKET lists _RBRACKET

    9 lists: %empty
   10      | statement_list
   11      | variable_list statement_list

   12 variable_list: %empty
   13              | variable_list variable

   14 variable: type _ID _SEMICOLON

   15 statement_list: %empty
   16               | statement_list statement

   17 statement: compound_statement
   18          | assignment_statement
   19          | if_statement
   20          | return_statement

   21 compound_statement: _LBRACKET statement_list _RBRACKET

   22 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   23 num_exp: exp
   24        | num_exp _AROP exp

   25 exp: literal
   26    | _ID
   27    | function_call
   28    | _LPAREN num_exp _RPAREN

   29 literal: _INT_NUMBER
   30        | _UINT_NUMBER

   31 function_call: _ID _LPAREN argument _RPAREN

   32 argument: %empty
   33         | num_exp

   34 if_statement: if_part
   35             | if_part _ELSE statement

   36 if_part: _IF _LPAREN rel_exp _RPAREN statement

   37 rel_exp: num_exp _RELOP num_exp

   38 return_statement: _RETURN num_exp _SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
_TYPE (258) 5
_IF (259) 36
_ELSE (260) 35
_RETURN (261) 38
_ID (262) 4 7 14 22 26 31
_INT_NUMBER (263) 29
_UINT_NUMBER (264) 30
_LPAREN (265) 4 28 31 36
_RPAREN (266) 4 28 31 36
_LBRACKET (267) 8 21
_RBRACKET (268) 8 21
_ASSIGN (269) 22
_SEMICOLON (270) 14 22 38
_AROP (271) 24
_RELOP (272) 37
ONLY_IF (273)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1, on right: 0
function_list (21)
    on left: 2 3, on right: 1 3
function (22)
    on left: 4, on right: 2 3
type (23)
    on left: 5, on right: 4 7 14
parameter (24)
    on left: 6 7, on right: 4
body (25)
    on left: 8, on right: 4
lists (26)
    on left: 9 10 11, on right: 8
variable_list (27)
    on left: 12 13, on right: 11 13
variable (28)
    on left: 14, on right: 13
statement_list (29)
    on left: 15 16, on right: 10 11 16 21
statement (30)
    on left: 17 18 19 20, on right: 16 35 36
compound_statement (31)
    on left: 21, on right: 17
assignment_statement (32)
    on left: 22, on right: 18
num_exp (33)
    on left: 23 24, on right: 22 24 28 33 37 38
exp (34)
    on left: 25 26 27 28, on right: 23 24
literal (35)
    on left: 29 30, on right: 25
function_call (36)
    on left: 31, on right: 27
argument (37)
    on left: 32 33, on right: 31
if_statement (38)
    on left: 34 35, on right: 19
if_part (39)
    on left: 36, on right: 34 35
rel_exp (40)
    on left: 37, on right: 36
return_statement (41)
    on left: 38, on right: 20


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4
    type           go to state 5


State 1

    5 type: _TYPE .

    $default  reduce using rule 5 (type)


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7
    type      go to state 5


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    4 function: type . _ID _LPAREN parameter _RPAREN body

    _ID  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    4 function: type _ID . _LPAREN parameter _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    4 function: type _ID _LPAREN . parameter _RPAREN body

    _TYPE  shift, and go to state 1

    $default  reduce using rule 6 (parameter)

    type       go to state 10
    parameter  go to state 11


State 10

    7 parameter: type . _ID

    _ID  shift, and go to state 12


State 11

    4 function: type _ID _LPAREN parameter . _RPAREN body

    _RPAREN  shift, and go to state 13


State 12

    7 parameter: type _ID .

    $default  reduce using rule 7 (parameter)


State 13

    4 function: type _ID _LPAREN parameter _RPAREN . body

    _LBRACKET  shift, and go to state 14

    body  go to state 15


State 14

    8 body: _LBRACKET . lists _RBRACKET

    _IF        reduce using rule 12 (variable_list)
    _IF        [reduce using rule 15 (statement_list)]
    _RETURN    reduce using rule 12 (variable_list)
    _RETURN    [reduce using rule 15 (statement_list)]
    _ID        reduce using rule 12 (variable_list)
    _ID        [reduce using rule 15 (statement_list)]
    _LBRACKET  reduce using rule 12 (variable_list)
    _LBRACKET  [reduce using rule 15 (statement_list)]
    _RBRACKET  reduce using rule 9 (lists)
    _RBRACKET  [reduce using rule 12 (variable_list)]
    _RBRACKET  [reduce using rule 15 (statement_list)]
    $default   reduce using rule 12 (variable_list)

    lists           go to state 16
    variable_list   go to state 17
    statement_list  go to state 18


State 15

    4 function: type _ID _LPAREN parameter _RPAREN body .

    $default  reduce using rule 4 (function)


State 16

    8 body: _LBRACKET lists . _RBRACKET

    _RBRACKET  shift, and go to state 19


State 17

   11 lists: variable_list . statement_list
   13 variable_list: variable_list . variable

    _TYPE  shift, and go to state 1

    $default  reduce using rule 15 (statement_list)

    type            go to state 20
    variable        go to state 21
    statement_list  go to state 22


State 18

   10 lists: statement_list .
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    $default  reduce using rule 10 (lists)

    statement             go to state 27
    compound_statement    go to state 28
    assignment_statement  go to state 29
    if_statement          go to state 30
    if_part               go to state 31
    return_statement      go to state 32


State 19

    8 body: _LBRACKET lists _RBRACKET .

    $default  reduce using rule 8 (body)


State 20

   14 variable: type . _ID _SEMICOLON

    _ID  shift, and go to state 33


State 21

   13 variable_list: variable_list variable .

    $default  reduce using rule 13 (variable_list)


State 22

   11 lists: variable_list statement_list .
   16 statement_list: statement_list . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    $default  reduce using rule 11 (lists)

    statement             go to state 27
    compound_statement    go to state 28
    assignment_statement  go to state 29
    if_statement          go to state 30
    if_part               go to state 31
    return_statement      go to state 32


State 23

   36 if_part: _IF . _LPAREN rel_exp _RPAREN statement

    _LPAREN  shift, and go to state 34


State 24

   38 return_statement: _RETURN . num_exp _SEMICOLON

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 39
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 25

   22 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON

    _ASSIGN  shift, and go to state 43


State 26

   21 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 15 (statement_list)

    statement_list  go to state 44


State 27

   16 statement_list: statement_list statement .

    $default  reduce using rule 16 (statement_list)


State 28

   17 statement: compound_statement .

    $default  reduce using rule 17 (statement)


State 29

   18 statement: assignment_statement .

    $default  reduce using rule 18 (statement)


State 30

   19 statement: if_statement .

    $default  reduce using rule 19 (statement)


State 31

   34 if_statement: if_part .
   35             | if_part . _ELSE statement

    _ELSE  shift, and go to state 45

    $default  reduce using rule 34 (if_statement)


State 32

   20 statement: return_statement .

    $default  reduce using rule 20 (statement)


State 33

   14 variable: type _ID . _SEMICOLON

    _SEMICOLON  shift, and go to state 46


State 34

   36 if_part: _IF _LPAREN . rel_exp _RPAREN statement

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 47
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42
    rel_exp        go to state 48


State 35

   26 exp: _ID .
   31 function_call: _ID . _LPAREN argument _RPAREN

    _LPAREN  shift, and go to state 49

    $default  reduce using rule 26 (exp)


State 36

   29 literal: _INT_NUMBER .

    $default  reduce using rule 29 (literal)


State 37

   30 literal: _UINT_NUMBER .

    $default  reduce using rule 30 (literal)


State 38

   28 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 50
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 39

   24 num_exp: num_exp . _AROP exp
   38 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 51
    _AROP       shift, and go to state 52


State 40

   23 num_exp: exp .

    $default  reduce using rule 23 (num_exp)


State 41

   25 exp: literal .

    $default  reduce using rule 25 (exp)


State 42

   27 exp: function_call .

    $default  reduce using rule 27 (exp)


State 43

   22 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 53
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 44

   16 statement_list: statement_list . statement
   21 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26
    _RBRACKET  shift, and go to state 54

    statement             go to state 27
    compound_statement    go to state 28
    assignment_statement  go to state 29
    if_statement          go to state 30
    if_part               go to state 31
    return_statement      go to state 32


State 45

   35 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 55
    compound_statement    go to state 28
    assignment_statement  go to state 29
    if_statement          go to state 30
    if_part               go to state 31
    return_statement      go to state 32


State 46

   14 variable: type _ID _SEMICOLON .

    $default  reduce using rule 14 (variable)


State 47

   24 num_exp: num_exp . _AROP exp
   37 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 52
    _RELOP  shift, and go to state 56


State 48

   36 if_part: _IF _LPAREN rel_exp . _RPAREN statement

    _RPAREN  shift, and go to state 57


State 49

   31 function_call: _ID _LPAREN . argument _RPAREN

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    $default  reduce using rule 32 (argument)

    num_exp        go to state 58
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42
    argument       go to state 59


State 50

   24 num_exp: num_exp . _AROP exp
   28 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 60
    _AROP    shift, and go to state 52


State 51

   38 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 38 (return_statement)


State 52

   24 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    exp            go to state 61
    literal        go to state 41
    function_call  go to state 42


State 53

   22 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   24 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 62
    _AROP       shift, and go to state 52


State 54

   21 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 21 (compound_statement)


State 55

   35 if_statement: if_part _ELSE statement .

    $default  reduce using rule 35 (if_statement)


State 56

   37 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 35
    _INT_NUMBER   shift, and go to state 36
    _UINT_NUMBER  shift, and go to state 37
    _LPAREN       shift, and go to state 38

    num_exp        go to state 63
    exp            go to state 40
    literal        go to state 41
    function_call  go to state 42


State 57

   36 if_part: _IF _LPAREN rel_exp _RPAREN . statement

    _IF        shift, and go to state 23
    _RETURN    shift, and go to state 24
    _ID        shift, and go to state 25
    _LBRACKET  shift, and go to state 26

    statement             go to state 64
    compound_statement    go to state 28
    assignment_statement  go to state 29
    if_statement          go to state 30
    if_part               go to state 31
    return_statement      go to state 32


State 58

   24 num_exp: num_exp . _AROP exp
   33 argument: num_exp .

    _AROP  shift, and go to state 52

    $default  reduce using rule 33 (argument)


State 59

   31 function_call: _ID _LPAREN argument . _RPAREN

    _RPAREN  shift, and go to state 65


State 60

   28 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 28 (exp)


State 61

   24 num_exp: num_exp _AROP exp .

    $default  reduce using rule 24 (num_exp)


State 62

   22 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 22 (assignment_statement)


State 63

   24 num_exp: num_exp . _AROP exp
   37 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 52

    $default  reduce using rule 37 (rel_exp)


State 64

   36 if_part: _IF _LPAREN rel_exp _RPAREN statement .

    $default  reduce using rule 36 (if_part)


State 65

   31 function_call: _ID _LPAREN argument _RPAREN .

    $default  reduce using rule 31 (function_call)
